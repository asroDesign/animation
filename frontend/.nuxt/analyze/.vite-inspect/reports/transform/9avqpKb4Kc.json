{
  "resolvedId": "/Users/mohammadrassoulzadeh/Documents/project/marktify/front/pages/dashboard/support/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div class=\"w-full  rounded-3xl flex flex-col gap-7 overflow-hidden\">\n    <!-- Tabs and New Conversation Button -->\n    <div class=\"flex flex-col justify-between sm:flex-row gap-4 items-center\">\n      <div role=\"tablist\" class=\"tabs tabs-border\">\n        <a v-for=\"tab in tabs\"\n           :key=\"tab\"\n           @click=\"activeTab = tab\"\n           :aria-current=\"activeTab === tab ? 'true' : 'false'\" role=\"tab\" class=\"tab\" :class=\"{'tab-active':activeTab === tab}\">{{ tab }}</a>\n\n      </div>\n      <nuxt-link to=\"/dashboard/support/new\">\n        <PrimaryButton>\n          New Conversation\n        </PrimaryButton>\n      </nuxt-link>\n    </div>\n\n    <!-- Conversation List -->\n    <div class=\"flex flex-col gap-4 w-full\">\n      <nuxt-link\n          v-for=\"conversation in filteredConversations\"\n          :key=\"conversation.id\"\n          class=\"p-4 rounded-2xl border\"\n          :to=\"`/dashboard/support/${conversation.id}`\"\n          :class=\"{\n          'border-amber-300': conversation.status === 'Pending',\n          'border-emerald-500': conversation.status === 'Responded',\n          'border-gray-400': conversation.status === 'Closed',\n        }\"\n      >\n        <div class=\"flex flex-col gap-2\">\n          <div class=\"flex items-center gap-2 flex-wrap\">\n            <nuxt-icon name=\"iconsax/bulk/message\" />\n            <h3 class=\"text-white text-xl sm:text-2xl font-normal font-[\\'Impact\\'] flex-1\">\n              {{ conversation.title }}\n            </h3>\n            <span\n                class=\"px-4 py-1 rounded-3xl border text-white text-sm sm:text-base font-medium font-[\\'Shabnam\\'] text-center\"\n                :class=\"{\n                'border-amber-300': conversation.status === 'Pending',\n                'border-emerald-500': conversation.status === 'Responded',\n                'border-gray-400': conversation.status === 'Closed',\n              }\"\n            >\n              {{ conversation.status }}\n            </span>\n          </div>\n          <p class=\"text-gray-400 text-sm sm:text-base font-medium font-[\\'Shabnam\\']\">\n            {{ conversation.lastMessage?.message || conversation.description }}\n          </p>\n          <div class=\"flex items-center gap-2 text-gray-400 text-sm sm:text-base font-medium font-[\\'Shabnam\\']\">\n            <nuxt-icon name=\"iconsax/bulk/calendar\" />\n            {{ new Date(conversation.lastMessage?.created_at || conversation.created_at).toDateString() }}\n          </div>\n        </div>\n      </nuxt-link>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport PrimaryButton from \"~/components/tools/PrimaryButton.vue\";\n\n// Tabs\nconst tabs = ['All', 'Ongoing', 'Closed'];\nconst activeTab = ref('All');\n\nconst {data:conversations} = useMyFetch('tickets',{\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n})\n// Conversations Data\n// const conversations = ref([\n//   {\n//     id: 1,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 2,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Responded',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 3,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Closed',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 4,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n// ]);\n\n// Filtered Conversations\nconst filteredConversations = computed(() => {\n  if (activeTab.value === 'All') return conversations.value;\n  if (activeTab.value === 'Ongoing') {\n    return conversations.value.filter(\n        (c) => c.status === 'Pending' || c.status === 'Responded'\n    );\n  }\n  return conversations.value.filter((c) => c.status === 'Closed');\n});\n\n// New Conversation\nconst startNewConversation = () => {\n  console.log('Starting new conversation...');\n  // Add logic to open a new conversation form or redirect\n};\ndefinePageMeta({\n  layout:'dashboard',\n  middleware:'auth'\n})\n</script>\n\n<style scoped>\n/* Tailwind handles all styling */\n</style>",
      "start": 1746483913798,
      "end": 1746483913923,
      "sourcemaps": null
    },
    {
      "name": "nuxt:components-loader-pre",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal-normal"
    },
    {
      "name": "vite:vue",
      "result": "import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-full rounded-3xl flex flex-col gap-7 overflow-hidden\" }\nconst _hoisted_2 = { class: \"flex flex-col justify-between sm:flex-row gap-4 items-center\" }\nconst _hoisted_3 = {\n  role: \"tablist\",\n  class: \"tabs tabs-border\"\n}\nconst _hoisted_4 = [\"onClick\", \"aria-current\"]\nconst _hoisted_5 = { class: \"flex flex-col gap-4 w-full\" }\nconst _hoisted_6 = { class: \"flex flex-col gap-2\" }\nconst _hoisted_7 = { class: \"flex items-center gap-2 flex-wrap\" }\nconst _hoisted_8 = { class: \"text-white text-xl sm:text-2xl font-normal font-[\\\\'Impact\\\\'] flex-1\" }\nconst _hoisted_9 = { class: \"text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\nconst _hoisted_10 = { class: \"flex items-center gap-2 text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\n\nimport { ref, computed } from 'vue';\nimport PrimaryButton from \"~/components/tools/PrimaryButton.vue\";\n\n// Tabs\n\nconst _sfc_main = {\n  __name: 'index',\n  setup(__props) {\n\nconst tabs = ['All', 'Ongoing', 'Closed'];\nconst activeTab = ref('All');\n\nconst {data:conversations} = useMyFetch('tickets',{\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n})\n// Conversations Data\n// const conversations = ref([\n//   {\n//     id: 1,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 2,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Responded',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 3,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Closed',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 4,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n// ]);\n\n// Filtered Conversations\nconst filteredConversations = computed(() => {\n  if (activeTab.value === 'All') return conversations.value;\n  if (activeTab.value === 'Ongoing') {\n    return conversations.value.filter(\n        (c) => c.status === 'Pending' || c.status === 'Responded'\n    );\n  }\n  return conversations.value.filter((c) => c.status === 'Closed');\n});\n\n// New Conversation\nconst startNewConversation = () => {\n  console.log('Starting new conversation...');\n  // Add logic to open a new conversation form or redirect\n};\ndefinePageMeta({\n  layout:'dashboard',\n  middleware:'auth'\n})\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n  const _component_nuxt_icon = _resolveComponent(\"nuxt-icon\")\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tabs, (tab) => {\n          return _createElementVNode(\"a\", {\n            key: tab,\n            onClick: $event => (activeTab.value = tab),\n            \"aria-current\": activeTab.value === tab ? 'true' : 'false',\n            role: \"tab\",\n            class: _normalizeClass([\"tab\", {'tab-active':activeTab.value === tab}])\n          }, _toDisplayString(tab), 11, _hoisted_4)\n        }), 64))\n      ]),\n      _createVNode(_component_nuxt_link, { to: \"/dashboard/support/new\" }, {\n        default: _withCtx(() => [\n          _createVNode(PrimaryButton, null, {\n            default: _withCtx(() => _cache[0] || (_cache[0] = [\n              _createTextVNode(\" New Conversation \")\n            ])),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredConversations.value, (conversation) => {\n        return (_openBlock(), _createBlock(_component_nuxt_link, {\n          key: conversation.id,\n          class: _normalizeClass([\"p-4 rounded-2xl border\", {\n          'border-amber-300': conversation.status === 'Pending',\n          'border-emerald-500': conversation.status === 'Responded',\n          'border-gray-400': conversation.status === 'Closed',\n        }]),\n          to: `/dashboard/support/${conversation.id}`\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/message\" }),\n                _createElementVNode(\"h3\", _hoisted_8, _toDisplayString(conversation.title), 1),\n                _createElementVNode(\"span\", {\n                  class: _normalizeClass([\"px-4 py-1 rounded-3xl border text-white text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\'] text-center\", {\n                'border-amber-300': conversation.status === 'Pending',\n                'border-emerald-500': conversation.status === 'Responded',\n                'border-gray-400': conversation.status === 'Closed',\n              }])\n                }, _toDisplayString(conversation.status), 3)\n              ]),\n              _createElementVNode(\"p\", _hoisted_9, _toDisplayString(conversation.lastMessage?.message || conversation.description), 1),\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/calendar\" }),\n                _createTextVNode(\" \" + _toDisplayString(new Date(conversation.lastMessage?.created_at || conversation.created_at).toDateString()), 1)\n              ])\n            ])\n          ]),\n          _: 2\n        }, 1032, [\"to\", \"class\"]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n}\n\n\nimport \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/pages/dashboard/support/index.vue?vue&type=style&index=0&scoped=2516c93f&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['__scopeId',\"data-v-2516c93f\"]])",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "nuxt:module-preload-polyfill",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "normal-normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "post"
    },
    {
      "name": "nuxt:head:unhead-imports",
      "start": 1746483913923,
      "end": 1746483913923,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-full rounded-3xl flex flex-col gap-7 overflow-hidden\" }\nconst _hoisted_2 = { class: \"flex flex-col justify-between sm:flex-row gap-4 items-center\" }\nconst _hoisted_3 = {\n  role: \"tablist\",\n  class: \"tabs tabs-border\"\n}\nconst _hoisted_4 = [\"onClick\", \"aria-current\"]\nconst _hoisted_5 = { class: \"flex flex-col gap-4 w-full\" }\nconst _hoisted_6 = { class: \"flex flex-col gap-2\" }\nconst _hoisted_7 = { class: \"flex items-center gap-2 flex-wrap\" }\nconst _hoisted_8 = { class: \"text-white text-xl sm:text-2xl font-normal font-[\\\\'Impact\\\\'] flex-1\" }\nconst _hoisted_9 = { class: \"text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\nconst _hoisted_10 = { class: \"flex items-center gap-2 text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\n\nimport { ref, computed } from 'vue';\nimport PrimaryButton from \"~/components/tools/PrimaryButton.vue\";\n\n\nimport { useMyFetch } from '/Users/mohammadrassoulzadeh/Documents/project/marktify/front/composables/apiFetch.ts';\nimport { definePageMeta } from '/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt/dist/pages/runtime/composables';\n// Tabs\n\nconst _sfc_main = {\n  __name: 'index',\n  setup(__props) {\n\nconst tabs = ['All', 'Ongoing', 'Closed'];\nconst activeTab = ref('All');\n\nconst {data:conversations} = useMyFetch('tickets',{\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n})\n// Conversations Data\n// const conversations = ref([\n//   {\n//     id: 1,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 2,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Responded',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 3,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Closed',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 4,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n// ]);\n\n// Filtered Conversations\nconst filteredConversations = computed(() => {\n  if (activeTab.value === 'All') return conversations.value;\n  if (activeTab.value === 'Ongoing') {\n    return conversations.value.filter(\n        (c) => c.status === 'Pending' || c.status === 'Responded'\n    );\n  }\n  return conversations.value.filter((c) => c.status === 'Closed');\n});\n\n// New Conversation\nconst startNewConversation = () => {\n  console.log('Starting new conversation...');\n  // Add logic to open a new conversation form or redirect\n};\ndefinePageMeta({\n  layout:'dashboard',\n  middleware:'auth'\n})\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n  const _component_nuxt_icon = _resolveComponent(\"nuxt-icon\")\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tabs, (tab) => {\n          return _createElementVNode(\"a\", {\n            key: tab,\n            onClick: $event => (activeTab.value = tab),\n            \"aria-current\": activeTab.value === tab ? 'true' : 'false',\n            role: \"tab\",\n            class: _normalizeClass([\"tab\", {'tab-active':activeTab.value === tab}])\n          }, _toDisplayString(tab), 11, _hoisted_4)\n        }), 64))\n      ]),\n      _createVNode(_component_nuxt_link, { to: \"/dashboard/support/new\" }, {\n        default: _withCtx(() => [\n          _createVNode(PrimaryButton, null, {\n            default: _withCtx(() => _cache[0] || (_cache[0] = [\n              _createTextVNode(\" New Conversation \")\n            ])),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredConversations.value, (conversation) => {\n        return (_openBlock(), _createBlock(_component_nuxt_link, {\n          key: conversation.id,\n          class: _normalizeClass([\"p-4 rounded-2xl border\", {\n          'border-amber-300': conversation.status === 'Pending',\n          'border-emerald-500': conversation.status === 'Responded',\n          'border-gray-400': conversation.status === 'Closed',\n        }]),\n          to: `/dashboard/support/${conversation.id}`\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/message\" }),\n                _createElementVNode(\"h3\", _hoisted_8, _toDisplayString(conversation.title), 1),\n                _createElementVNode(\"span\", {\n                  class: _normalizeClass([\"px-4 py-1 rounded-3xl border text-white text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\'] text-center\", {\n                'border-amber-300': conversation.status === 'Pending',\n                'border-emerald-500': conversation.status === 'Responded',\n                'border-gray-400': conversation.status === 'Closed',\n              }])\n                }, _toDisplayString(conversation.status), 3)\n              ]),\n              _createElementVNode(\"p\", _hoisted_9, _toDisplayString(conversation.lastMessage?.message || conversation.description), 1),\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/calendar\" }),\n                _createTextVNode(\" \" + _toDisplayString(new Date(conversation.lastMessage?.created_at || conversation.created_at).toDateString()), 1)\n              ])\n            ])\n          ]),\n          _: 2\n        }, 1032, [\"to\", \"class\"]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n}\n\n\nimport \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/pages/dashboard/support/index.vue?vue&type=style&index=0&scoped=2516c93f&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['__scopeId',\"data-v-2516c93f\"]])",
      "start": 1746483913923,
      "end": 1746483913925,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingsvZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;AAEhE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrtI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrtI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrtI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC;;AAED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACfhnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjnpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpvJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChtI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrpJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ;AACA;;AAEA;;;AAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEtJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1746483913925,
      "end": 1746483913925,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746483913925,
      "end": 1746483913925,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746483913925,
      "end": 1746483913925,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746483913925,
      "end": 1746483913925,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746483913925,
      "end": 1746483913925,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt/dist/app/components/nuxt-link.js\";\nimport { default as __nuxt_component_1 } from \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt-icons/dist/runtime/components/nuxt-icon.vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-full rounded-3xl flex flex-col gap-7 overflow-hidden\" }\nconst _hoisted_2 = { class: \"flex flex-col justify-between sm:flex-row gap-4 items-center\" }\nconst _hoisted_3 = {\n  role: \"tablist\",\n  class: \"tabs tabs-border\"\n}\nconst _hoisted_4 = [\"onClick\", \"aria-current\"]\nconst _hoisted_5 = { class: \"flex flex-col gap-4 w-full\" }\nconst _hoisted_6 = { class: \"flex flex-col gap-2\" }\nconst _hoisted_7 = { class: \"flex items-center gap-2 flex-wrap\" }\nconst _hoisted_8 = { class: \"text-white text-xl sm:text-2xl font-normal font-[\\\\'Impact\\\\'] flex-1\" }\nconst _hoisted_9 = { class: \"text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\nconst _hoisted_10 = { class: \"flex items-center gap-2 text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\n\nimport { ref, computed } from 'vue';\nimport PrimaryButton from \"~/components/tools/PrimaryButton.vue\";\n\n\nimport { useMyFetch } from '/Users/mohammadrassoulzadeh/Documents/project/marktify/front/composables/apiFetch.ts';\nimport { definePageMeta } from '/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt/dist/pages/runtime/composables';\n// Tabs\n\nconst _sfc_main = {\n  __name: 'index',\n  setup(__props) {\n\nconst tabs = ['All', 'Ongoing', 'Closed'];\nconst activeTab = ref('All');\n\nconst {data:conversations} = useMyFetch('tickets',{\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n})\n// Conversations Data\n// const conversations = ref([\n//   {\n//     id: 1,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 2,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Responded',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 3,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Closed',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 4,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n// ]);\n\n// Filtered Conversations\nconst filteredConversations = computed(() => {\n  if (activeTab.value === 'All') return conversations.value;\n  if (activeTab.value === 'Ongoing') {\n    return conversations.value.filter(\n        (c) => c.status === 'Pending' || c.status === 'Responded'\n    );\n  }\n  return conversations.value.filter((c) => c.status === 'Closed');\n});\n\n// New Conversation\nconst startNewConversation = () => {\n  console.log('Starting new conversation...');\n  // Add logic to open a new conversation form or redirect\n};\ndefinePageMeta({\n  layout:'dashboard',\n  middleware:'auth'\n})\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = __nuxt_component_0\n  const _component_nuxt_icon = __nuxt_component_1\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tabs, (tab) => {\n          return _createElementVNode(\"a\", {\n            key: tab,\n            onClick: $event => (activeTab.value = tab),\n            \"aria-current\": activeTab.value === tab ? 'true' : 'false',\n            role: \"tab\",\n            class: _normalizeClass([\"tab\", {'tab-active':activeTab.value === tab}])\n          }, _toDisplayString(tab), 11, _hoisted_4)\n        }), 64))\n      ]),\n      _createVNode(_component_nuxt_link, { to: \"/dashboard/support/new\" }, {\n        default: _withCtx(() => [\n          _createVNode(PrimaryButton, null, {\n            default: _withCtx(() => _cache[0] || (_cache[0] = [\n              _createTextVNode(\" New Conversation \")\n            ])),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredConversations.value, (conversation) => {\n        return (_openBlock(), _createBlock(_component_nuxt_link, {\n          key: conversation.id,\n          class: _normalizeClass([\"p-4 rounded-2xl border\", {\n          'border-amber-300': conversation.status === 'Pending',\n          'border-emerald-500': conversation.status === 'Responded',\n          'border-gray-400': conversation.status === 'Closed',\n        }]),\n          to: `/dashboard/support/${conversation.id}`\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/message\" }),\n                _createElementVNode(\"h3\", _hoisted_8, _toDisplayString(conversation.title), 1),\n                _createElementVNode(\"span\", {\n                  class: _normalizeClass([\"px-4 py-1 rounded-3xl border text-white text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\'] text-center\", {\n                'border-amber-300': conversation.status === 'Pending',\n                'border-emerald-500': conversation.status === 'Responded',\n                'border-gray-400': conversation.status === 'Closed',\n              }])\n                }, _toDisplayString(conversation.status), 3)\n              ]),\n              _createElementVNode(\"p\", _hoisted_9, _toDisplayString(conversation.lastMessage?.message || conversation.description), 1),\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/calendar\" }),\n                _createTextVNode(\" \" + _toDisplayString(new Date(conversation.lastMessage?.created_at || conversation.created_at).toDateString()), 1)\n              ])\n            ])\n          ]),\n          _: 2\n        }, 1032, [\"to\", \"class\"]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n}\n\n\nimport \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/pages/dashboard/support/index.vue?vue&type=style&index=0&scoped=2516c93f&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['__scopeId',\"data-v-2516c93f\"]])",
      "start": 1746483913925,
      "end": 1746483913925,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { default as __nuxt_component_0 } from \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt/dist/app/components/nuxt-link.js\";\nimport { default as __nuxt_component_1 } from \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt-icons/dist/runtime/components/nuxt-icon.vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-full rounded-3xl flex flex-col gap-7 overflow-hidden\" }\nconst _hoisted_2 = { class: \"flex flex-col justify-between sm:flex-row gap-4 items-center\" }\nconst _hoisted_3 = {\n  role: \"tablist\",\n  class: \"tabs tabs-border\"\n}\nconst _hoisted_4 = [\"onClick\", \"aria-current\"]\nconst _hoisted_5 = { class: \"flex flex-col gap-4 w-full\" }\nconst _hoisted_6 = { class: \"flex flex-col gap-2\" }\nconst _hoisted_7 = { class: \"flex items-center gap-2 flex-wrap\" }\nconst _hoisted_8 = { class: \"text-white text-xl sm:text-2xl font-normal font-[\\\\'Impact\\\\'] flex-1\" }\nconst _hoisted_9 = { class: \"text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\nconst _hoisted_10 = { class: \"flex items-center gap-2 text-gray-400 text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\']\" }\n\nimport { ref, computed } from 'vue';\nimport PrimaryButton from \"~/components/tools/PrimaryButton.vue\";\n\n\nimport { useMyFetch } from '/Users/mohammadrassoulzadeh/Documents/project/marktify/front/composables/apiFetch.ts';\nimport { definePageMeta } from '/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt/dist/pages/runtime/composables';\n// Tabs\n\nconst _sfc_main = {\n  __name: 'index',\n  setup(__props) {\n\nconst tabs = ['All', 'Ongoing', 'Closed'];\nconst activeTab = ref('All');\n\nconst {data:conversations} = useMyFetch('tickets',{\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n})\n// Conversations Data\n// const conversations = ref([\n//   {\n//     id: 1,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 2,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Responded',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 3,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Closed',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n//   {\n//     id: 4,\n//     title: 'Title of Conversation',\n//     lastMessage: 'The message, It could be anything the user asked, this text field presents the last message in the conversation.',\n//     status: 'Pending',\n//     date: '13 Apr 2025',\n//     time: '13:54',\n//   },\n// ]);\n\n// Filtered Conversations\nconst filteredConversations = computed(() => {\n  if (activeTab.value === 'All') return conversations.value;\n  if (activeTab.value === 'Ongoing') {\n    return conversations.value.filter(\n        (c) => c.status === 'Pending' || c.status === 'Responded'\n    );\n  }\n  return conversations.value.filter((c) => c.status === 'Closed');\n});\n\n// New Conversation\nconst startNewConversation = () => {\n  console.log('Starting new conversation...');\n  // Add logic to open a new conversation form or redirect\n};\n false && /*@__PURE__*/ definePageMeta({\n  layout:'dashboard',\n  middleware:'auth'\n})\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = __nuxt_component_0\n  const _component_nuxt_icon = __nuxt_component_1\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tabs, (tab) => {\n          return _createElementVNode(\"a\", {\n            key: tab,\n            onClick: $event => (activeTab.value = tab),\n            \"aria-current\": activeTab.value === tab ? 'true' : 'false',\n            role: \"tab\",\n            class: _normalizeClass([\"tab\", {'tab-active':activeTab.value === tab}])\n          }, _toDisplayString(tab), 11, _hoisted_4)\n        }), 64))\n      ]),\n      _createVNode(_component_nuxt_link, { to: \"/dashboard/support/new\" }, {\n        default: _withCtx(() => [\n          _createVNode(PrimaryButton, null, {\n            default: _withCtx(() => _cache[0] || (_cache[0] = [\n              _createTextVNode(\" New Conversation \")\n            ])),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredConversations.value, (conversation) => {\n        return (_openBlock(), _createBlock(_component_nuxt_link, {\n          key: conversation.id,\n          class: _normalizeClass([\"p-4 rounded-2xl border\", {\n          'border-amber-300': conversation.status === 'Pending',\n          'border-emerald-500': conversation.status === 'Responded',\n          'border-gray-400': conversation.status === 'Closed',\n        }]),\n          to: `/dashboard/support/${conversation.id}`\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/message\" }),\n                _createElementVNode(\"h3\", _hoisted_8, _toDisplayString(conversation.title), 1),\n                _createElementVNode(\"span\", {\n                  class: _normalizeClass([\"px-4 py-1 rounded-3xl border text-white text-sm sm:text-base font-medium font-[\\\\'Shabnam\\\\'] text-center\", {\n                'border-amber-300': conversation.status === 'Pending',\n                'border-emerald-500': conversation.status === 'Responded',\n                'border-gray-400': conversation.status === 'Closed',\n              }])\n                }, _toDisplayString(conversation.status), 3)\n              ]),\n              _createElementVNode(\"p\", _hoisted_9, _toDisplayString(conversation.lastMessage?.message || conversation.description), 1),\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createVNode(_component_nuxt_icon, { name: \"iconsax/bulk/calendar\" }),\n                _createTextVNode(\" \" + _toDisplayString(new Date(conversation.lastMessage?.created_at || conversation.created_at).toDateString()), 1)\n              ])\n            ])\n          ]),\n          _: 2\n        }, 1032, [\"to\", \"class\"]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n}\n\n\nimport \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/pages/dashboard/support/index.vue?vue&type=style&index=0&scoped=2516c93f&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['__scopeId',\"data-v-2516c93f\"]])",
      "start": 1746483913925,
      "end": 1746483913926,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746483913926,
      "end": 1746483913926,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746483913926,
      "end": 1746483913926,
      "order": "normal"
    }
  ]
}
