{
  "resolvedId": "/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/errx/dist/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const IS_ABSOLUTE_RE = /^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[a-z]:[/\\\\]/i;\nconst LINE_RE = /^\\s+at (?:(?<function>[^)]+) \\()?(?<source>[^)]+)\\)?$/u;\nconst SOURCE_RE = /^(?<source>.+):(?<line>\\d+):(?<column>\\d+)$/u;\nfunction captureRawStackTrace() {\n  if (!Error.captureStackTrace) {\n    return;\n  }\n  const stack = new Error();\n  Error.captureStackTrace(stack);\n  return stack.stack;\n}\nfunction captureStackTrace() {\n  const stack = captureRawStackTrace();\n  return stack ? parseRawStackTrace(stack) : [];\n}\nfunction parseRawStackTrace(stacktrace) {\n  const trace = [];\n  for (const line of stacktrace.split(\"\\n\")) {\n    const parsed = LINE_RE.exec(line)?.groups;\n    if (!parsed) {\n      continue;\n    }\n    if (!parsed.source) {\n      continue;\n    }\n    const parsedSource = SOURCE_RE.exec(parsed.source)?.groups;\n    if (parsedSource) {\n      Object.assign(parsed, parsedSource);\n    }\n    if (IS_ABSOLUTE_RE.test(parsed.source)) {\n      parsed.source = `file://${parsed.source}`;\n    }\n    if (parsed.source === import.meta.url) {\n      continue;\n    }\n    for (const key of [\"line\", \"column\"]) {\n      if (parsed[key]) {\n        parsed[key] = Number(parsed[key]);\n      }\n    }\n    trace.push(parsed);\n  }\n  return trace;\n}\n\nexport { captureRawStackTrace, captureStackTrace, parseRawStackTrace };\n",
      "start": 1746483914003,
      "end": 1746483914053,
      "sourcemaps": null
    },
    {
      "name": "nuxt:components-loader-pre",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal-normal"
    },
    {
      "name": "vite:vue",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "nuxt:module-preload-polyfill",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746483914053,
      "end": 1746483914053,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "normal-normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:head:unhead-imports",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746483914054,
      "end": 1746483914054,
      "order": "normal"
    }
  ]
}
