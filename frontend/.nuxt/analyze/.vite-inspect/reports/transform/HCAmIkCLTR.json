{
  "resolvedId": "/Users/mohammadrassoulzadeh/Documents/project/marktify/front/composables/apiFetch.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\nexport const useApiFetch = $fetch.create({\n    onRequest({ request, options, error }) {\n        options.headers = {\n            ...options.headers,\n            // Authorization: `Bearer ${useAuthStore().token}`,\n        }\n        options.baseURL = 'http://pixelstudio.asrodev.ir/api'\n    },\n});\n\n// import {useAuthStore} from \"~/stores/auth.js\";\nexport const useMyFetch: typeof useFetch = (request, opts?) => {\n    const config = useRuntimeConfig()\n    // const authStore = useAuthStore();\n    const args = opts || {}\n    if (useRoute().meta.middleware=='auth'){\n        Object.assign(args,{\n            headers: {\n                Authorization: `Bearer ${useCookie('CSRF_ASRO_TOKEN').value}`,\n            }\n        })\n    }\n\n    return useFetch(request, { baseURL: 'http://pixelstudio.asrodev.ir/api', ...opts })\n}",
      "start": 1746483912202,
      "end": 1746483912778,
      "sourcemaps": null
    },
    {
      "name": "nuxt:components-loader-pre",
      "start": 1746483912778,
      "end": 1746483912778,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746483912778,
      "end": 1746483912778,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746483912778,
      "end": 1746483912778,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "export const useApiFetch = $fetch.create({\n  onRequest({ request, options, error }) {\n    options.headers = {\n      ...options.headers\n      // Authorization: `Bearer ${useAuthStore().token}`,\n    };\n    options.baseURL = \"http://pixelstudio.asrodev.ir/api\";\n  }\n});\nexport const useMyFetch = (request, opts) => {\n  const config = useRuntimeConfig();\n  const args = opts || {};\n  if (useRoute().meta.middleware == \"auth\") {\n    Object.assign(args, {\n      headers: {\n        Authorization: `Bearer ${useCookie(\"CSRF_ASRO_TOKEN\").value}`\n      }\n    });\n  }\n  return useFetch(request, { baseURL: \"http://pixelstudio.asrodev.ir/api\", ...opts });\n};\n",
      "start": 1746483912778,
      "end": 1746483913450,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/mohammadrassoulzadeh/Documents/project/marktify/front/composables/apiFetch.ts"
        ],
        "sourcesContent": [
          "\nexport const useApiFetch = $fetch.create({\n    onRequest({ request, options, error }) {\n        options.headers = {\n            ...options.headers,\n            // Authorization: `Bearer ${useAuthStore().token}`,\n        }\n        options.baseURL = 'http://pixelstudio.asrodev.ir/api'\n    },\n});\n\n// import {useAuthStore} from \"~/stores/auth.js\";\nexport const useMyFetch: typeof useFetch = (request, opts?) => {\n    const config = useRuntimeConfig()\n    // const authStore = useAuthStore();\n    const args = opts || {}\n    if (useRoute().meta.middleware=='auth'){\n        Object.assign(args,{\n            headers: {\n                Authorization: `Bearer ${useCookie('CSRF_ASRO_TOKEN').value}`,\n            }\n        })\n    }\n\n    return useFetch(request, { baseURL: 'http://pixelstudio.asrodev.ir/api', ...opts })\n}"
        ],
        "mappings": "AACO,aAAM,cAAc,OAAO,OAAO;AAAA,EACrC,UAAU,EAAE,SAAS,SAAS,MAAM,GAAG;AACnC,YAAQ,UAAU;AAAA,MACd,GAAG,QAAQ;AAAA;AAAA,IAEf;AACA,YAAQ,UAAU;AAAA,EACtB;AACJ,CAAC;AAGM,aAAM,aAA8B,CAAC,SAAS,SAAU;AAC3D,QAAM,SAAS,iBAAiB;AAEhC,QAAM,OAAO,QAAQ,CAAC;AACtB,MAAI,SAAS,EAAE,KAAK,cAAY,QAAO;AACnC,WAAO,OAAO,MAAK;AAAA,MACf,SAAS;AAAA,QACL,eAAe,UAAU,UAAU,iBAAiB,EAAE,KAAK;AAAA,MAC/D;AAAA,IACJ,CAAC;AAAA,EACL;AAEA,SAAO,SAAS,SAAS,EAAE,SAAS,qCAAqC,GAAG,KAAK,CAAC;AACtF;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1746483913450,
      "end": 1746483913450,
      "order": "normal-normal"
    },
    {
      "name": "vite:vue",
      "start": 1746483913450,
      "end": 1746483913450,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746483913450,
      "end": 1746483913450,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483913450,
      "end": 1746483913450,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746483913451,
      "end": 1746483913451,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1746483913451,
      "end": 1746483913451,
      "order": "normal"
    },
    {
      "name": "nuxt:module-preload-polyfill",
      "start": 1746483913451,
      "end": 1746483913451,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483913451,
      "end": 1746483913451,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746483913451,
      "end": 1746483913451,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746483913458,
      "end": 1746483913458,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746483913458,
      "end": 1746483913458,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746483913458,
      "end": 1746483913458,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746483913458,
      "end": 1746483913458,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746483913459,
      "end": 1746483913459,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746483913459,
      "end": 1746483913459,
      "order": "normal-normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "export const useApiFetch = $fetch.create({\n  onRequest({ request, options, error }) {\n    options.headers = {\n      ...options.headers\n      // Authorization: `Bearer ${useAuthStore().token}`,\n    };\n    options.baseURL = \"http://pixelstudio.asrodev.ir/api\";\n  }\n});\nexport const useMyFetch = (request, opts) => {\n  const config = useRuntimeConfig();\n  const args = opts || {};\n  if (useRoute().meta.middleware == \"auth\") {\n    Object.assign(args, {\n      headers: {\n        Authorization: `Bearer ${useCookie(\"CSRF_ASRO_TOKEN\").value}`\n      }\n    });\n  }\n  return useFetch(request, { baseURL: \"http://pixelstudio.asrodev.ir/api\", ...opts }, '$YOUS5wXd2X');\n};\n",
      "start": 1746483913461,
      "end": 1746483913463,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC;AACF,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpgBAAC,CAAC;AACrF,CAAC;"
      }
    },
    {
      "name": "nuxt:head:unhead-imports",
      "start": 1746483913463,
      "end": 1746483913463,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRuntimeConfig } from '#app/nuxt';\nimport { useRoute } from '#app/composables/router';\nimport { useCookie } from '#app/composables/cookie';\nimport { useFetch } from '#app/composables/fetch';\nexport const useApiFetch = $fetch.create({\n  onRequest({ request, options, error }) {\n    options.headers = {\n      ...options.headers\n      // Authorization: `Bearer ${useAuthStore().token}`,\n    };\n    options.baseURL = \"http://pixelstudio.asrodev.ir/api\";\n  }\n});\nexport const useMyFetch = (request, opts) => {\n  const config = useRuntimeConfig();\n  const args = opts || {};\n  if (useRoute().meta.middleware == \"auth\") {\n    Object.assign(args, {\n      headers: {\n        Authorization: `Bearer ${useCookie(\"CSRF_ASRO_TOKEN\").value}`\n      }\n    });\n  }\n  return useFetch(request, { baseURL: \"http://pixelstudio.asrodev.ir/api\", ...opts }, '$YOUS5wXd2X');\n};\n",
      "start": 1746483913464,
      "end": 1746483913465,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC;AACF,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpG,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1746483913465,
      "end": 1746483913465,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746483913465,
      "end": 1746483913465,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746483913465,
      "end": 1746483913465,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746483913465,
      "end": 1746483913466,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746483913466,
      "end": 1746483913466,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746483913466,
      "end": 1746483913466,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746483913466,
      "end": 1746483913466,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746483913466,
      "end": 1746483913466,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746483913466,
      "end": 1746483913466,
      "order": "normal"
    }
  ]
}
