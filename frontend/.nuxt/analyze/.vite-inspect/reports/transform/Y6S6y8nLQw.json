{
  "resolvedId": "/Users/mohammadrassoulzadeh/Documents/project/marktify/front/components/tools/DepositModal.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\n<template>\n  <primary-button class=\"btn\" onclick=\"deposit_modal_3.showModal()\">Deposit</primary-button>\n\n  <dialog id=\"deposit_modal_3\" class=\"modal\">\n    <div class=\"modal-box bg-transparent\">\n\n      <div\n          class=\"w-full max-w-md sm:max-w-[567px] bg-[#020617] rounded-[42px] flex flex-col items-center gap-7 p-7 sm:p-10 relative overflow-hidden\"\n      >\n        <!-- Gradient Background -->\n        <div class=\"absolute inset-0 bg-gradient-to-b from-pink-600/0 to-violet-700/30 rounded-full blur-[350px]\"></div>\n\n        <!-- Close Button -->\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n            <svg class=\"w-8 h-8\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n              <path d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </form>\n\n        <!-- Header -->\n        <h1 class=\"text-white text-4xl sm:text-7xl font-normal font-['Impact']\">Deposit</h1>\n        <p class=\"text-white text-xl sm:text-3xl font-normal font-['Impact']\">Select method to deposit.</p>\n\n        <!-- Form -->\n        <form @submit.prevent=\"submitDeposit\" class=\"w-full max-w-[507px] bg-[#14082A] rounded-[32px] p-7 flex flex-col gap-7\">\n          <!-- Payment Method -->\n          <div class=\"flex gap-6 sm:gap-12\">\n            <label\n                v-for=\"method in paymentMethods\"\n                :key=\"method\"\n                class=\"flex items-center gap-2 cursor-pointer\"\n            >\n              <div class=\"relative\">\n                <input\n                    type=\"radio\"\n                    :value=\"method\"\n                    v-model=\"formData.paymentMethod\"\n                    class=\"hidden\"\n                />\n                <div\n                    class=\"w-6 h-6 rounded-full border\"\n                    :class=\"formData.paymentMethod === method ? 'bg-primary border-primary-shade' : 'bg-[#14082A] border-gray-400'\"\n                ></div>\n                <div\n                    v-if=\"formData.paymentMethod === method\"\n                    class=\"absolute top-1.5 left-1.5 w-3 h-3 bg-white rounded-full\"\n                ></div>\n              </div>\n              <span class=\"text-white text-sm sm:text-base font-normal font-['Shabnam']\">{{ method }}</span>\n            </label>\n          </div>\n          <p v-if=\"errors.paymentMethod\" class=\"text-red-500 text-sm\">{{ errors.paymentMethod }}</p>\n\n          <!-- Amount -->\n          <div class=\"relative\">\n            <input\n                v-model.number=\"formData.amount\"\n                type=\"number\"\n                placeholder=\"Amount\"\n                min=\"0\"\n                step=\"0.01\"\n                class=\"w-full h-12 px-4 bg-[#14082A] border border-[#514078] rounded-2xl text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-primary\"\n                :class=\"{ 'border-red-500': errors.amount }\"\n            />\n            <p v-if=\"errors.amount\" class=\"text-red-500 text-sm mt-1\">{{ errors.amount }}</p>\n          </div>\n\n          <!-- Summary -->\n          <div class=\"flex flex-col gap-2 text-gray-400 text-sm sm:text-base font-normal font-['Shabnam']\">\n            <p>Tax: 0</p>\n            <p>Fee: 0</p>\n            <p>\n              You will receive:\n              <span class=\"text-2xl font-normal font-['Impact']\">{{ formData.amount || 0 }} $</span>\n            </p>\n          </div>\n\n          <!-- Submit Button -->\n          <button\n              type=\"submit\"\n              class=\"w-full h-12 bg-primary rounded-3xl shadow-[0_0_6px_rgba(202,23,92,1)] border border-primary text-white text-base font-medium font-['Shabnam'] hover:bg-primary/90 transition-colors\"\n          >\n            Pay and Deposit\n          </button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport SecondaryButton from \"~/components/tools/SecondaryButton.vue\";\nimport PrimaryButton from \"~/components/tools/PrimaryButton.vue\";\n\ndefineProps(['balance']);\ndefineEmits(['close', 'update-balance']);\n\n// Form Data\nconst formData = ref({\n  paymentMethod: 'Credit Card',\n  amount: null,\n});\n\nconst paymentMethods = ['Credit Card', 'Cryptocurrency'];\nconst errors = ref({});\n\n// Computed Final Amount (Placeholder for real calculation)\nconst finalAmount = computed(() => formData.value.amount || 0);\n\n// Submit Deposit\nconst submitDeposit = async () => {\n  errors.value = {};\n\n  if (!formData.value.paymentMethod) {\n    errors.value.paymentMethod = 'Please select a payment method.';\n  }\n  if (!formData.value.amount || formData.value.amount <= 0) {\n    errors.value.amount = 'Please enter a valid amount.';\n  }\n  if (Object.keys(errors.value).length > 0) return;\n\n  try {\n    // Simulate API call\n    console.log('Deposit Data:', formData.value);\n    // Example: await fetch('/api/wallet/deposit', { method: 'POST', body: JSON.stringify(formData.value) });\n    const newBalance = (props.balance || 0) + formData.value.amount;\n    $emit('update-balance', newBalance);\n    $emit('close');\n    alert('Deposit successful!');\n  } catch (error) {\n    errors.value.general = 'Failed to process deposit. Please try again.';\n    console.error(error);\n  }\n};\n</script>\n\n<style scoped>\n/* Tailwind handles all styling */\n</style>\n",
      "start": 1746483913850,
      "end": 1746483914017,
      "sourcemaps": null
    },
    {
      "name": "nuxt:components-loader-pre",
      "start": 1746483914017,
      "end": 1746483914017,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746483914017,
      "end": 1746483914017,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746483914017,
      "end": 1746483914017,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1746483914017,
      "end": 1746483914017,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746483914017,
      "end": 1746483914017,
      "order": "normal-normal"
    },
    {
      "name": "vite:vue",
      "result": "import { createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, vModelRadio as _vModelRadio, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"deposit_modal_3\",\n  class: \"modal\"\n}\nconst _hoisted_2 = { class: \"modal-box bg-transparent\" }\nconst _hoisted_3 = { class: \"w-full max-w-md sm:max-w-[567px] bg-[#020617] rounded-[42px] flex flex-col items-center gap-7 p-7 sm:p-10 relative overflow-hidden\" }\nconst _hoisted_4 = { class: \"flex gap-6 sm:gap-12\" }\nconst _hoisted_5 = { class: \"relative\" }\nconst _hoisted_6 = [\"value\"]\nconst _hoisted_7 = {\n  key: 0,\n  class: \"absolute top-1.5 left-1.5 w-3 h-3 bg-white rounded-full\"\n}\nconst _hoisted_8 = { class: \"text-white text-sm sm:text-base font-normal font-['Shabnam']\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"text-red-500 text-sm\"\n}\nconst _hoisted_10 = { class: \"relative\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"text-red-500 text-sm mt-1\"\n}\nconst _hoisted_12 = { class: \"flex flex-col gap-2 text-gray-400 text-sm sm:text-base font-normal font-['Shabnam']\" }\nconst _hoisted_13 = { class: \"text-2xl font-normal font-['Impact']\" }\n\nimport { ref, computed } from 'vue';\nimport SecondaryButton from \"~/components/tools/SecondaryButton.vue\";\nimport PrimaryButton from \"~/components/tools/PrimaryButton.vue\";\n\n\nconst _sfc_main = {\n  __name: 'DepositModal',\n  props: ['balance'],\n  emits: ['close', 'update-balance'],\n  setup(__props) {\n\n\n\n\n// Form Data\nconst formData = ref({\n  paymentMethod: 'Credit Card',\n  amount: null,\n});\n\nconst paymentMethods = ['Credit Card', 'Cryptocurrency'];\nconst errors = ref({});\n\n// Computed Final Amount (Placeholder for real calculation)\nconst finalAmount = computed(() => formData.value.amount || 0);\n\n// Submit Deposit\nconst submitDeposit = async () => {\n  errors.value = {};\n\n  if (!formData.value.paymentMethod) {\n    errors.value.paymentMethod = 'Please select a payment method.';\n  }\n  if (!formData.value.amount || formData.value.amount <= 0) {\n    errors.value.amount = 'Please enter a valid amount.';\n  }\n  if (Object.keys(errors.value).length > 0) return;\n\n  try {\n    // Simulate API call\n    console.log('Deposit Data:', formData.value);\n    // Example: await fetch('/api/wallet/deposit', { method: 'POST', body: JSON.stringify(formData.value) });\n    const newBalance = (props.balance || 0) + formData.value.amount;\n    $emit('update-balance', newBalance);\n    $emit('close');\n    alert('Deposit successful!');\n  } catch (error) {\n    errors.value.general = 'Failed to process deposit. Please try again.';\n    console.error(error);\n  }\n};\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(PrimaryButton, {\n      class: \"btn\",\n      onclick: \"deposit_modal_3.showModal()\"\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [\n        _createTextVNode(\"Deposit\")\n      ])),\n      _: 1\n    }),\n    _createElementVNode(\"dialog\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _cache[7] || (_cache[7] = _createElementVNode(\"div\", { class: \"absolute inset-0 bg-gradient-to-b from-pink-600/0 to-violet-700/30 rounded-full blur-[350px]\" }, null, -1)),\n          _cache[8] || (_cache[8] = _createElementVNode(\"form\", { method: \"dialog\" }, [\n            _createElementVNode(\"button\", { class: \"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\" }, [\n              _createElementVNode(\"svg\", {\n                class: \"w-8 h-8\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                \"stroke-width\": \"2\"\n              }, [\n                _createElementVNode(\"path\", { d: \"M6 18L18 6M6 6l12 12\" })\n              ])\n            ])\n          ], -1)),\n          _cache[9] || (_cache[9] = _createElementVNode(\"h1\", { class: \"text-white text-4xl sm:text-7xl font-normal font-['Impact']\" }, \"Deposit\", -1)),\n          _cache[10] || (_cache[10] = _createElementVNode(\"p\", { class: \"text-white text-xl sm:text-3xl font-normal font-['Impact']\" }, \"Select method to deposit.\", -1)),\n          _createElementVNode(\"form\", {\n            onSubmit: _withModifiers(submitDeposit, [\"prevent\"]),\n            class: \"w-full max-w-[507px] bg-[#14082A] rounded-[32px] p-7 flex flex-col gap-7\"\n          }, [\n            _createElementVNode(\"div\", _hoisted_4, [\n              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(paymentMethods, (method) => {\n                return _createElementVNode(\"label\", {\n                  key: method,\n                  class: \"flex items-center gap-2 cursor-pointer\"\n                }, [\n                  _createElementVNode(\"div\", _hoisted_5, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"radio\",\n                      value: method,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => ((formData.value.paymentMethod) = $event)),\n                      class: \"hidden\"\n                    }, null, 8, _hoisted_6), [\n                      [_vModelRadio, formData.value.paymentMethod]\n                    ]),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass([\"w-6 h-6 rounded-full border\", formData.value.paymentMethod === method ? 'bg-primary border-primary-shade' : 'bg-[#14082A] border-gray-400'])\n                    }, null, 2),\n                    (formData.value.paymentMethod === method)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _createElementVNode(\"span\", _hoisted_8, _toDisplayString(method), 1)\n                ])\n              }), 64))\n            ]),\n            (errors.value.paymentMethod)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, _toDisplayString(errors.value.paymentMethod), 1))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => ((formData.value.amount) = $event)),\n                type: \"number\",\n                placeholder: \"Amount\",\n                min: \"0\",\n                step: \"0.01\",\n                class: _normalizeClass([\"w-full h-12 px-4 bg-[#14082A] border border-[#514078] rounded-2xl text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-primary\", { 'border-red-500': errors.value.amount }])\n              }, null, 2), [\n                [\n                  _vModelText,\n                  formData.value.amount,\n                  void 0,\n                  { number: true }\n                ]\n              ]),\n              (errors.value.amount)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, _toDisplayString(errors.value.amount), 1))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _createElementVNode(\"div\", _hoisted_12, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"Tax: 0\", -1)),\n              _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"Fee: 0\", -1)),\n              _createElementVNode(\"p\", null, [\n                _cache[3] || (_cache[3] = _createTextVNode(\" You will receive: \")),\n                _createElementVNode(\"span\", _hoisted_13, _toDisplayString(formData.value.amount || 0) + \" $\", 1)\n              ])\n            ]),\n            _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n              type: \"submit\",\n              class: \"w-full h-12 bg-primary rounded-3xl shadow-[0_0_6px_rgba(202,23,92,1)] border border-primary text-white text-base font-medium font-['Shabnam'] hover:bg-primary/90 transition-colors\"\n            }, \" Pay and Deposit \", -1))\n          ], 32)\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n}\n\n\nimport \"/Users/mohammadrassoulzadeh/Documents/project/marktify/front/components/tools/DepositModal.vue?vue&type=style&index=0&scoped=42c075a6&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['__scopeId',\"data-v-42c075a6\"]])",
      "start": 1746483914017,
      "end": 1746483914019,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal"
    },
    {
      "name": "nuxt:module-preload-polyfill",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "normal-normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "post"
    },
    {
      "name": "nuxt:head:unhead-imports",
      "start": 1746483914019,
      "end": 1746483914019,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746483914019,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746483914020,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746483914020,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746483914020,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746483914020,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746483914020,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746483914020,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746483914020,
      "end": 1746483914020,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746483914020,
      "end": 1746483914021,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746483914021,
      "end": 1746483914021,
      "order": "normal"
    }
  ]
}
