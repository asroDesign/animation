{
  "resolvedId": "/Users/mohammadrassoulzadeh/Documents/project/marktify/front/components/tools/D3AnimationPlayer.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup>\nimport * as THREE from 'three';\nimport { ref, onMounted } from 'vue';\n\nconst props = defineProps({\n  video_url:String\n})\nconst canvasRef = ref(null);\n\nonMounted(() => {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.value });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  // ایجاد ویدئو به‌عنوان تکسچر\n  const video = document.createElement('video');\n  video.src = props.video_url //'/videos/sample.webm';\n  video.loop = true;\n  video.muted = true;\n  video.play();\n\n  const videoTexture = new THREE.VideoTexture(video);\n  const geometry = new THREE.PlaneGeometry(16, 9);\n  const material = new THREE.MeshBasicMaterial({ map: videoTexture });\n  const mesh = new THREE.Mesh(geometry, material);\n  scene.add(mesh);\n\n  camera.position.z = 10;\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n  };\n  animate();\n});\n</script>\n\n<template>\n  <canvas ref=\"canvasRef\"></canvas>\n</template>",
      "start": 1746483913855,
      "end": 1746483914037,
      "sourcemaps": null
    },
    {
      "name": "nuxt:components-loader-pre",
      "start": 1746483914037,
      "end": 1746483914037,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746483914037,
      "end": 1746483914037,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746483914037,
      "end": 1746483914037,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1746483914037,
      "end": 1746483914037,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746483914037,
      "end": 1746483914037,
      "order": "normal-normal"
    },
    {
      "name": "vite:vue",
      "result": "import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport * as THREE from 'three';\nimport { ref, onMounted } from 'vue';\n\n\nconst _sfc_main = {\n  __name: 'D3AnimationPlayer',\n  props: {\n  video_url:String\n},\n  setup(__props) {\n\nconst props = __props\nconst canvasRef = ref(null);\n\nonMounted(() => {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.value });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  // ایجاد ویدئو به‌عنوان تکسچر\n  const video = document.createElement('video');\n  video.src = props.video_url //'/videos/sample.webm';\n  video.loop = true;\n  video.muted = true;\n  video.play();\n\n  const videoTexture = new THREE.VideoTexture(video);\n  const geometry = new THREE.PlaneGeometry(16, 9);\n  const material = new THREE.MeshBasicMaterial({ map: videoTexture });\n  const mesh = new THREE.Mesh(geometry, material);\n  scene.add(mesh);\n\n  camera.position.z = 10;\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n  };\n  animate();\n});\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvasRef\",\n    ref: canvasRef\n  }, null, 512))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1746483914037,
      "end": 1746483914038,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746483914038,
      "end": 1746483914039,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal"
    },
    {
      "name": "nuxt:module-preload-polyfill",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "normal-normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "post"
    },
    {
      "name": "nuxt:head:unhead-imports",
      "start": 1746483914039,
      "end": 1746483914039,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746483914039,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746483914040,
      "end": 1746483914040,
      "order": "normal"
    }
  ]
}
