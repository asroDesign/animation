{
  "resolvedId": "/Users/mohammadrassoulzadeh/Documents/project/marktify/front/node_modules/nuxt/dist/pages/runtime/composables.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getCurrentInstance } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useNuxtApp } from \"#app/nuxt\";\nconst warnRuntimeUsage = (method) => {\n  console.warn(\n    `${method}() is a compiler-hint helper that is only usable inside the script block of a single file component which is also a page. Its arguments should be compiled away and passing it at runtime has no effect.`\n  );\n};\nexport const definePageMeta = (meta) => {\n  if (import.meta.dev) {\n    const component = getCurrentInstance()?.type;\n    try {\n      const isRouteComponent = component && useRoute().matched.some((p) => Object.values(p.components || {}).includes(component));\n      const isRenderingServerPage = import.meta.server && useNuxtApp().ssrContext?.islandContext;\n      if (isRouteComponent || isRenderingServerPage || component?.__clientOnlyPage) {\n        return;\n      }\n    } catch {\n    }\n    warnRuntimeUsage(\"definePageMeta\");\n  }\n};\nexport const defineRouteRules = /* @__NO_SIDE_EFFECTS__ */ (rules) => {\n};\n",
      "start": 1746483920750,
      "end": 1746483920873,
      "sourcemaps": null
    },
    {
      "name": "nuxt:components-loader-pre",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "pre"
    },
    {
      "name": "nuxt:components-loader-pre",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "pre"
    },
    {
      "name": "nuxt:server-only-component-transform",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal-normal"
    },
    {
      "name": "vite:vue",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { getCurrentInstance } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useNuxtApp } from \"#app/nuxt\";\nconst warnRuntimeUsage = (method) => {\n  console.warn(\n    `${method}() is a compiler-hint helper that is only usable inside the script block of a single file component which is also a page. Its arguments should be compiled away and passing it at runtime has no effect.`\n  );\n};\nexport const definePageMeta = (meta) => {\n  if (false) {\n    const component = getCurrentInstance()?.type;\n    try {\n      const isRouteComponent = component && useRoute().matched.some((p) => Object.values(p.components || {}).includes(component));\n      const isRenderingServerPage = true && useNuxtApp().ssrContext?.islandContext;\n      if (isRouteComponent || isRenderingServerPage || component?.__clientOnlyPage) {\n        return;\n      }\n    } catch {\n    }\n    warnRuntimeUsage(\"definePageMeta\");\n  }\n};\nexport const defineRouteRules = /* @__NO_SIDE_EFFECTS__ */ (rules) => {\n};\n",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdtN,CAAC,CAAC,CAAC;AACH,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChjI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC;AACF,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "normal-normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "post"
    },
    {
      "name": "nuxt:head:unhead-imports",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "post"
    },
    {
      "name": "nuxt:head:unhead-imports",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746483920873,
      "end": 1746483920873,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746483920873,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746483920873,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746483920874,
      "end": 1746483920874,
      "order": "normal"
    }
  ]
}
